{"ast":null,"code":"var _jsxFileName = \"/Users/burcueren/BSS1/src/Admin/Products/Products.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, makeStyles, Button } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport AdminLayout from '../../components/Layout/AdminLayout';\nimport ProductList from './ProductList';\nimport db from '../../fire';\nimport AddIcon from '@material-ui/icons/Add';\nimport { usePopup } from '../../components/Popup/Popup';\nimport AddProduct from './AddProduct';\nimport UpdateProduct from './UpdateProduct';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  button: {\n    width: 100,\n    marginBottom: theme.spacing(1),\n    alignSelf: 'flex-end'\n  }\n}));\n\nconst Products = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    open,\n    togglePopup\n  } = usePopup();\n  const [updateProductOpen, setUpdateProductOpen] = useState(false);\n  const [products, setProducts] = useState({});\n  const [currentProduct, setCurrentProduct] = useState(null);\n\n  const getData = async () => {\n    try {\n      await db.database().ref('Books').on('value', snaphot => {\n        if (snaphot.val()) {\n          setProducts({ ...snaphot.val()\n          });\n        } else {\n          setProducts({});\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(async () => {\n    getData();\n  }, []);\n\n  const addProduct = () => {\n    togglePopup();\n  };\n\n  const updateProduct = item => {\n    setUpdateProductOpen(prev => !prev);\n    setCurrentProduct({ ...products[item],\n      id: item\n    });\n  };\n\n  const toggleUpdatePopup = () => setUpdateProductOpen(prev => !prev);\n\n  return /*#__PURE__*/_jsxDEV(AdminLayout, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.button,\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 40\n            }, this),\n            color: \"primary\",\n            onClick: addProduct,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n            products,\n            updateProduct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AddProduct, {\n            open,\n            togglePopup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(UpdateProduct, {\n            open: updateProductOpen,\n            togglePopup: toggleUpdatePopup,\n            currentProduct: currentProduct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Products, \"gH07oGD9uEQBreyT4KgNP2S52K8=\", false, function () {\n  return [useStyles, usePopup];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/burcueren/BSS1/src/Admin/Products/Products.js"],"names":["Grid","Paper","makeStyles","Button","React","useEffect","useState","AdminLayout","ProductList","db","AddIcon","usePopup","AddProduct","UpdateProduct","useStyles","theme","paper","padding","spacing","display","overflow","flexDirection","button","width","marginBottom","alignSelf","Products","classes","open","togglePopup","updateProductOpen","setUpdateProductOpen","products","setProducts","currentProduct","setCurrentProduct","getData","database","ref","on","snaphot","val","error","console","log","addProduct","updateProduct","item","prev","id","toggleUpdatePopup"],"mappings":"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","sourcesContent":["import { Grid, Paper, makeStyles, Button } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdminLayout from '../../components/Layout/AdminLayout';\r\nimport ProductList from './ProductList';\r\nimport db from '../../fire';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { usePopup } from '../../components/Popup/Popup'\r\nimport AddProduct from './AddProduct';\r\nimport UpdateProduct from './UpdateProduct';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    button: {\r\n        width: 100,\r\n        marginBottom: theme.spacing(1),\r\n        alignSelf: 'flex-end',\r\n    }\r\n}));\r\n\r\nconst Products = () => {\r\n\r\n    const classes = useStyles();\r\n    const { open, togglePopup } = usePopup();\r\n\r\n    const [updateProductOpen, setUpdateProductOpen] = useState(false);\r\n    const [products, setProducts] = useState({});\r\n    const [currentProduct, setCurrentProduct] = useState(null);\r\n\r\n    const getData = async () => {\r\n        try {\r\n            await db.database().ref('Books').on('value', snaphot => {\r\n                if (snaphot.val()) {\r\n                    setProducts({ ...snaphot.val() });\r\n                }\r\n                else {\r\n                    setProducts({});\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        getData()\r\n    }, [])\r\n\r\n    const addProduct = () => {\r\n        togglePopup();\r\n    }\r\n\r\n    const updateProduct = (item) => {\r\n        setUpdateProductOpen(prev => !prev);\r\n        setCurrentProduct({ ...products[item], id: item })\r\n    }\r\n\r\n    const toggleUpdatePopup = () => setUpdateProductOpen(prev => !prev)\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className={classes.button}\r\n                            startIcon={<AddIcon />}\r\n                            color='primary'\r\n                            onClick={addProduct}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                        <ProductList {...{ products, updateProduct }} />\r\n                        <AddProduct {...{ open, togglePopup }} />\r\n                        <UpdateProduct\r\n                            open={updateProductOpen}\r\n                            togglePopup={toggleUpdatePopup}\r\n                            currentProduct={currentProduct}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </AdminLayout>\r\n    )\r\n}\r\n\r\nexport default Products\r\n"]},"metadata":{},"sourceType":"module"}