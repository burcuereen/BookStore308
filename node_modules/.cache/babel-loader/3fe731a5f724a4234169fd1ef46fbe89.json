{"ast":null,"code":"var _jsxFileName = \"/Users/burcueren/BSS1/src/Admin/Products/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, TextField, makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { Popup } from '../../components/Popup/Popup';\nimport { useFormik } from 'formik';\nimport db from '../../fire';\nimport UploadButton from '../../components/UploadButton/UploadButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst UpdateProduct = props => {\n  _s();\n\n  var _formik$values, _formik$values2, _formik$values3, _formik$values4, _formik$values5, _formik$values6;\n\n  const {\n    open,\n    togglePopup,\n    currentProduct\n  } = props;\n  const classes = useStyles();\n  const [file, setFile] = useState(null);\n\n  const onSubmit = async values => {\n    let coverUrlWeb;\n\n    if (file) {\n      const fileRef = await db.storage().ref('BookCovers').child(file === null || file === void 0 ? void 0 : file.name);\n      await fileRef.put(file);\n      coverUrlWeb = await fileRef.getDownloadURL();\n\n      if (currentProduct.imageName) {\n        await db.storage().ref('BookCovers/' + (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.imageName)).delete();\n      }\n    }\n\n    const newValue = { ...values,\n      ...(coverUrlWeb && {\n        coverUrlWeb,\n        imageName: file === null || file === void 0 ? void 0 : file.name\n      })\n    };\n    await db.database().ref('Books/' + currentProduct.id).set(newValue, error => {\n      if (error) {\n        console.log(error);\n      } else {\n        alert('Succesfully');\n        togglePopup();\n      }\n    });\n  };\n\n  const handleUpload = e => {\n    var _e$target;\n\n    let selected = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files[0];\n    setFile(selected);\n  };\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: currentProduct,\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    open: open,\n    togglePopup: togglePopup,\n    autoClose: false,\n    title: \"Update Product\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      className: classes.form,\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"title\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"title\",\n            label: \"Name\",\n            autoFocus: true,\n            size: \"small\",\n            value: (_formik$values = formik.values) === null || _formik$values === void 0 ? void 0 : _formik$values.title,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"author\",\n            label: \"Author\",\n            name: \"author\",\n            autoComplete: \"author\",\n            size: \"small\",\n            value: (_formik$values2 = formik.values) === null || _formik$values2 === void 0 ? void 0 : _formik$values2.author,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"category\",\n            label: \"Category\",\n            name: \"category\",\n            autoComplete: \"category\",\n            size: \"small\",\n            value: (_formik$values3 = formik.values) === null || _formik$values3 === void 0 ? void 0 : _formik$values3.category,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"stock\",\n            label: \"Stock\",\n            type: \"number\",\n            id: \"stock\",\n            autoComplete: \"stock\",\n            size: \"small\",\n            value: (_formik$values4 = formik.values) === null || _formik$values4 === void 0 ? void 0 : _formik$values4.stock,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"price\",\n            label: \"Price\",\n            type: \"number\",\n            id: \"price\",\n            autoComplete: \"price\",\n            size: \"small\",\n            value: (_formik$values5 = formik.values) === null || _formik$values5 === void 0 ? void 0 : _formik$values5.price,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            name: \"summary\",\n            label: \"Summary\",\n            type: \"number\",\n            id: \"summary\",\n            autoComplete: \"summary\",\n            size: \"small\",\n            value: (_formik$values6 = formik.values) === null || _formik$values6 === void 0 ? void 0 : _formik$values6.summary,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(UploadButton, {\n            name: \"imageFile\",\n            label: \"Upload Image\",\n            onChange: handleUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProduct, \"ZMI2s0ixXt1R5yyD6f6C59QYtJs=\", false, function () {\n  return [useStyles, useFormik];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/burcueren/BSS1/src/Admin/Products/UpdateProduct.js"],"names":["Button","Grid","TextField","makeStyles","React","useState","Popup","useFormik","db","UploadButton","useStyles","theme","form","width","marginTop","spacing","submit","margin","UpdateProduct","props","open","togglePopup","currentProduct","classes","file","setFile","onSubmit","values","coverUrlWeb","fileRef","storage","ref","child","name","put","getDownloadURL","imageName","delete","newValue","database","id","set","error","console","log","alert","handleUpload","e","selected","target","files","formik","enableReinitialize","initialValues","handleSubmit","title","handleChange","author","category","stock","price","summary"],"mappings":"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","sourcesContent":["import { Button, Grid, TextField, makeStyles } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { Popup } from '../../components/Popup/Popup'\r\nimport { useFormik } from 'formik';\r\nimport db from '../../fire';\r\nimport UploadButton from '../../components/UploadButton/UploadButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nconst UpdateProduct = (props) => {\r\n    const { open, togglePopup, currentProduct } = props;\r\n    const classes = useStyles();\r\n    const [file, setFile] = useState(null);\r\n\r\n    const onSubmit = async (values) => {\r\n        let coverUrlWeb;\r\n\r\n        if (file) {\r\n            const fileRef = await db.storage().ref('BookCovers').child(file?.name);\r\n            await fileRef.put(file);\r\n            coverUrlWeb = await fileRef.getDownloadURL();\r\n            if (currentProduct.imageName) {\r\n                await db.storage().ref('BookCovers/' + currentProduct?.imageName).delete();\r\n            }\r\n        }\r\n\r\n        const newValue = { ...values, ...(coverUrlWeb && { coverUrlWeb, imageName: file?.name }) }\r\n\r\n        await db.database().ref('Books/' + currentProduct.id).set(newValue, (error) => {\r\n            if (error) {\r\n                console.log(error);\r\n            } else {\r\n                alert('Succesfully');\r\n                togglePopup();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const handleUpload = (e) => {\r\n        let selected = e.target?.files[0];\r\n        setFile(selected);\r\n    }\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: currentProduct,\r\n        onSubmit\r\n    });\r\n\r\n    return (\r\n        <Popup\r\n            open={open}\r\n            togglePopup={togglePopup}\r\n            autoClose={false}\r\n            title='Update Product'\r\n            maxWidth='xs'\r\n        >\r\n            <form noValidate className={classes.form} onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            name=\"title\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"title\"\r\n                            label=\"Name\"\r\n                            autoFocus\r\n                            size='small'\r\n                            value={formik.values?.title}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"author\"\r\n                            label=\"Author\"\r\n                            name=\"author\"\r\n                            autoComplete=\"author\"\r\n                            size='small'\r\n                            value={formik.values?.author}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"category\"\r\n                            label=\"Category\"\r\n                            name=\"category\"\r\n                            autoComplete=\"category\"\r\n                            size='small'\r\n                            value={formik.values?.category}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"stock\"\r\n                            label=\"Stock\"\r\n                            type=\"number\"\r\n                            id=\"stock\"\r\n                            autoComplete=\"stock\"\r\n                            size='small'\r\n                            value={formik.values?.stock}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"price\"\r\n                            label=\"Price\"\r\n                            type=\"number\"\r\n                            id=\"price\"\r\n                            autoComplete=\"price\"\r\n                            size='small'\r\n                            value={formik.values?.price}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            multiline\r\n                            rows={4}\r\n                            name=\"summary\"\r\n                            label=\"Summary\"\r\n                            type=\"number\"\r\n                            id=\"summary\"\r\n                            autoComplete=\"summary\"\r\n                            size='small'\r\n                            value={formik.values?.summary}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <UploadButton\r\n                            name='imageFile'\r\n                            label='Upload Image'\r\n                            onChange={handleUpload}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </form>\r\n        </Popup>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n"]},"metadata":{},"sourceType":"module"}