{"ast":null,"code":"var _jsxFileName = \"/Users/burcueren/BSS1/src/components/Context.js\";\nimport React, { Component } from 'react';\nimport fire from '../fire';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/React.createContext();\nexport class DataProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      cart: [],\n      total: 0,\n      filterState: \"\",\n      category: \"\"\n    };\n\n    this.addCart = id => {\n      const {\n        products,\n        cart\n      } = this.state;\n      const check = cart.every(item => {\n        return item._id !== id;\n      });\n      console.log({\n        products,\n        cart,\n        id,\n        check\n      });\n\n      if (check) {\n        const data = products.filter(product => {\n          return product._id == id;\n        });\n        this.setState({\n          cart: [...cart, ...data]\n        });\n      } else {\n        alert(\"The product has been added to cart.\");\n      }\n    };\n\n    this.reduction = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count === 1 ? item.count = 1 : item.count -= 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.increase = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count += 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.removeProduct = id => {\n      if (window.confirm(\"Do you want to delete this product?\")) {\n        const {\n          cart\n        } = this.state;\n        cart.forEach((item, index) => {\n          if (item._id === id) {\n            cart.splice(index, 1);\n          }\n        });\n        this.setState({\n          cart: cart\n        });\n        this.getTotal();\n      }\n    };\n\n    this.getTotal = () => {\n      const {\n        cart\n      } = this.state;\n      const res = cart.reduce((prev, item) => {\n        return prev + item.price * item.count;\n      }, 0);\n      this.setState({\n        total: res\n      });\n    };\n\n    this.setFilterState = word => {\n      const {\n        filterState\n      } = this.state;\n      this.setState({\n        filterState: word\n      });\n    };\n\n    this.setCategory = word => {\n      this.setState({\n        category: word\n      });\n    };\n\n    this.getProducts = () => {\n      var arr = [];\n      fire.database().ref('/').child(\"Books\").on(\"child_added\", data => {\n        var product = data.val();\n\n        if (product.discount > 0) {\n          var calculatedPerDis = product.price * product.discount / 100;\n          var calculatedPrice = product.price - calculatedPerDis;\n          product.oldPrice = product.price;\n          product.price = calculatedPrice.toFixed(2);\n          product.isDiscounted = true;\n        } else {\n          product.isDiscounted = false;\n        }\n\n        product._id = data.key;\n        product.count = 1;\n        arr.push(product);\n        this.setState({\n          products: arr\n        });\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('dataCart', JSON.stringify(this.state.cart));\n    localStorage.setItem('dataTotal', JSON.stringify(this.state.total));\n  }\n\n  componentDidMount() {\n    this.getProducts();\n    const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n\n    if (dataCart !== null) {\n      this.setState({\n        cart: dataCart\n      });\n    }\n\n    const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n\n    if (dataTotal !== null) {\n      this.setState({\n        total: dataTotal\n      });\n    }\n  }\n\n  render() {\n    const {\n      products,\n      cart,\n      total,\n      filterState,\n      category\n    } = this.state;\n    const {\n      addCart,\n      reduction,\n      increase,\n      removeProduct,\n      getTotal,\n      setFilterState,\n      setCategory\n    } = this;\n    return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: {\n        products,\n        addCart,\n        cart,\n        reduction,\n        increase,\n        removeProduct,\n        total,\n        getTotal,\n        filterState,\n        setFilterState,\n        category,\n        setCategory\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/burcueren/BSS1/src/components/Context.js"],"names":["React","Component","fire","DataContext","createContext","DataProvider","state","products","cart","total","filterState","category","addCart","id","check","every","item","_id","console","log","data","filter","product","setState","alert","reduction","forEach","count","getTotal","increase","removeProduct","window","confirm","index","splice","res","reduce","prev","price","setFilterState","word","setCategory","getProducts","arr","database","ref","child","on","val","discount","calculatedPerDis","calculatedPrice","oldPrice","toFixed","isDiscounted","key","push","componentDidUpdate","localStorage","setItem","JSON","stringify","componentDidMount","dataCart","parse","getItem","dataTotal","render","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport fire from '../fire';\r\n\r\nexport const DataContext = React.createContext();\r\n\r\nexport class DataProvider extends Component {\r\n\r\n    state = {\r\n        products: [],\r\n        cart: [],\r\n        total: 0,\r\n        filterState: \"\",\r\n        category: \"\"\r\n    };\r\n\r\n    addCart = (id) =>{\r\n        const {products, cart} = this.state;\r\n        const check = cart.every(item =>{\r\n            return item._id !== id\r\n        })\r\n        console.log({products,cart,id,check})\r\n        if(check){\r\n            const data = products.filter(product =>{\r\n                return product._id == id\r\n            })\r\n            this.setState({cart: [...cart,...data]})\r\n        }else{\r\n            alert(\"The product has been added to cart.\")\r\n        }\r\n    };\r\n\r\n    reduction = id =>{\r\n        const { cart } = this.state;\r\n        cart.forEach(item =>{\r\n            if(item._id === id){\r\n                item.count === 1 ? item.count = 1 : item.count -=1;\r\n            }\r\n        })\r\n        this.setState({cart: cart});\r\n        this.getTotal();\r\n    };\r\n\r\n    increase = id =>{\r\n        const { cart } = this.state;\r\n        cart.forEach(item =>{\r\n            if(item._id === id){\r\n                item.count += 1;\r\n            }\r\n        })\r\n        this.setState({cart: cart});\r\n        this.getTotal();\r\n    };\r\n\r\n    removeProduct = id =>{\r\n        if(window.confirm(\"Do you want to delete this product?\")){\r\n            const {cart} = this.state;\r\n            cart.forEach((item, index) =>{\r\n                if(item._id === id){\r\n                    cart.splice(index, 1)\r\n                }\r\n            })\r\n            this.setState({cart: cart});\r\n            this.getTotal();\r\n        }\r\n       \r\n    };\r\n\r\n    getTotal = ()=>{\r\n        const{cart} = this.state;\r\n        const res = cart.reduce((prev, item) => {\r\n            return prev + (item.price * item.count);\r\n        },0)\r\n        this.setState({total: res})\r\n    };\r\n\r\n    setFilterState = (word) => {\r\n        const {filterState} = this.state;\r\n        this.setState({filterState : word})\r\n    }\r\n\r\n    setCategory = (word) => {\r\n        this.setState({category : word})\r\n    }\r\n\r\n    getProducts = () =>{\r\n        var arr = []\r\n    fire.database().ref('/').child(\"Books\").on(\"child_added\", (data) => {\r\n        var product = data.val();\r\n        if(product.discount > 0){\r\n            var calculatedPerDis = ((product.price * product.discount) / 100);\r\n            var calculatedPrice = product.price - calculatedPerDis;\r\n            product.oldPrice = product.price;\r\n            product.price = (calculatedPrice).toFixed(2);\r\n            product.isDiscounted = true;\r\n        }else{\r\n            product.isDiscounted = false;\r\n        }\r\n        product._id = data.key;\r\n        product.count = 1;\r\n      arr.push(product)\r\n      this.setState({\r\n        products: arr\r\n      })\r\n    })\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        localStorage.setItem('dataCart', JSON.stringify(this.state.cart))\r\n        localStorage.setItem('dataTotal', JSON.stringify(this.state.total))\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.getProducts();\r\n        const dataCart = JSON.parse(localStorage.getItem('dataCart'));\r\n        if(dataCart !== null){\r\n            this.setState({cart: dataCart});\r\n        }\r\n        const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\r\n        if(dataTotal !== null){\r\n            this.setState({total: dataTotal});\r\n        }\r\n\r\n    }\r\n   \r\n\r\n    render() {\r\n        const {products, cart, total, filterState, category} = this.state;\r\n        const {addCart,reduction,increase,removeProduct,getTotal, setFilterState, setCategory} = this;\r\n        return (\r\n            <DataContext.Provider \r\n            value={{products, addCart, cart, reduction,increase,removeProduct,total,getTotal, filterState, setFilterState, category, setCategory}}>\r\n                {this.props.children}\r\n            </DataContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}